Ensuring Device Security

To ensure our device security. First, after we set up the Raspberry pi device, 
the Raspberry pi will initially send the table id and mac address to the database. 
And the database will record it and store it. Hence, when the Raspberry pi of any table at a time send a request at a time, 
it will contain the table id and mac address. It will allow the server to check is that raspberry pi’s table id and 
mac address is one of the registered table id and mac address in the database. 
Secondly, we will set a strong password for the database to make sure only the person who has the password to access the database. 
It is because a strong password will be difficult for attackers who tried to access the database. 
The reason that we want to set the strong password for the database is to make sure only the authorized user can access the database 
and let the attacker cannot add their raspberry pi’s mac address into the database.  

Data Transferred Between Devices and Server and while in Storage
1   Throttling :
To prevent the server overload by handling legitimate requests from the client 
and processing them which will cause the server crash. We will use throttling measures to
 limit the number of requests sent by the user and drop the server when the user sent many 
request at the same time. For example, if the user sends the first request, the server will 
ignore the rest of the requests in these 30 minutes.


2.  Input Validation 
We can use input validation in each blank that needs the user to type something.   
The input validation will verify is the user input type is allowed or not. 
It will also make sure the length, type, and format that the user types in are acceptable.
 Only the validated value can be processed, it helps to counteract any commands inserted in the input string. 
For example, we can use regular expressions to make sure the data input is valid.
 
3.  Strong Password, Change Password Often 
To prevent IoT attacks, we will set a strong password and change the password for every device and database in our network. 
For example, the password must have at least 8 letters which include
 1 uppercase letter, 1 lowercase letter, 1 special character (! @#$%^&*) and a number. 
Then, change the password per month with a different password than the previous one.
 
               
 4.  Use Proper REST API method
We will use the proper REST API method to get, create, update, modify and delete the data. The REST API methods are GET, POST, PUT, DELETE and PATCH. 
  
a. GET Method 
 GET Method will only retrieve the information only which will not modify    
it and change the state of the resource. For example, if the resource is found   
 on the server, then it will return response code 200(OK), if not found         
return code (404), and if not correct return code (400) bad request. (Tutorial, 2012)

b. POST Method
Post method will be used to create subordinate resources which will subordinate to some other resource. 
For example, POST method will associate the new resource from parent and service when create the new resource. (Tutorial, 2012)

c.  PUT Method
Put Method is often be used to update information by putting it into a known resource link resource link with a request 
body that has newly-updated representation of the original source. We will use PUT method as it is                         
idempotent which mean if we create or update the resource by using PUT method and call it again, the resource is still 
there and still having the same state as the first call.  (Tutorial, 2012)  

d. PATCH Method     
PATCH method in the request will only contain the changes that need to be change in the resource, 
not the complete resource link. We will use the PATCH method in the idempotent way to prevent the collisions from
multiple PATCH requests. For example, in the if-Match header on the PATCH request, 
we can use a strong ETag. (Tutorial, 2012)

e. DELETE Method
DELETE method will delete the data by using the URL link and hiding it  which mean you wouldn’t see what 
resources have been deleted or not.It will just return code (200) ok, code(204) no content, or code(404) not found. 
If  we use DELETE method to delete something, that resource be deleted, and if you call it again and again the result will be the same.   (Tutorial, 2012)               


5. IAM Role 
IAM Role is an IAM identity that let us can create an account with specific permissions. 
It is like an IAM user, in that it has an AWS identity with permissions policies that determine what the identity can and cannot do. 
(AWS, 2020) The Ec2 and MySQL databases prevent the user can access the database and Ec2 without permission.


 6. SSL certificate
Secure Sockets Layer (SSL) is a cryptographic protocol that is used to secure communications over the computer network.
 For example, HTTPS. It is because HTTPS use a key called A to encrypt communication content by using symmetric encryption. 
After that, HTTPS will use asymmetric encryption to encrypt key A and send it to another party. If the key does not fall into 
another party, then the transmitted data will not be decrypted by another party


References
AWS, A., 2020. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html. [Online] 
Available at: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html
[Accessed 2021 October 2021].
Infosys, 2021. Infocyte. [Online] 
Available at: https://www.infocyte.com/blog/2019/05/01/cybersecurity-101-intro-to-the-top-10-common-types-of-cyber-security-attacks/
[Accessed 17 October 2021].


